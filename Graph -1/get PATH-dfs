import java.util.ArrayList;
import java.util.Scanner;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.*;
public class Solution {

	public static ArrayList<Integer> GetPathDftraversal( int adjMatrix[][], int s, int e , boolean visited[]){

		if( s== e){
			ArrayList<Integer> arr = new ArrayList<>();
			arr.add(e);
			visited[s] = true;
			return arr;
		}
			visited[s] = true;
			ArrayList<Integer> ans = new ArrayList<>();
			ans= null;
		for( int i =0 ; i< adjMatrix.length; i++){
			if( adjMatrix[s][i]== 1 && !visited[i]){
				 ans = GetPathDftraversal(adjMatrix, i, e, visited);
				if(ans != null){
					ans.add(s);
					return ans;
				}
			}
		}

		return ans;
	}

	public static void print( ArrayList<Integer> ans){
		
		if (ans== null){
			return;
		}

		for(int i =0; i<ans.size(); i++){
			System.out.print(ans.get(i)+" ");
		}
	}
	public static void main(String[] args) throws NumberFormatException, IOException {

		 Scanner s = new Scanner (System.in);
		 int v = s.nextInt();
		 int e = s.nextInt();

		int adjMatrix[][]=new int [v][v];
		 for(int i =0; i<e; i++){
			 int a = s.nextInt();
			 int b= s.nextInt();

			adjMatrix[a][b]= 1;
			adjMatrix[b][a]=1;

		 }

		 int v1 = s.nextInt();
		 int v2= s.nextInt();

		 boolean visited[]= new boolean[ adjMatrix.length];

		 print(GetPathDftraversal(adjMatrix, v1, v2, visited));

	}
}
