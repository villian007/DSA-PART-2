
/*
    Following is the structure of the node class for a Singly Linked List

    class Node {
        int data;
        Node next;

        public Node(int data) {
            this.data = data;
            this.next = null;
        }

    }

*/

public class Stack {
    private Node head;
    private int size;
    //Define the data members


    public Stack() {
        head = null;
        size = 0;  //Implement the Constructor
    }



    /*----------------- Public Functions of Stack -----------------*/


    public int getSize() { 
        return size;   //Implement the getSize() function
    }

    public boolean isEmpty() {
        //Implement the isEmpty() function
        return size == 0;
    }

    public void push(int element) {
        //Implement the push(element) function
        Node newNode = new Node(element);
        if (head == null) {
            head = newNode;
        } else {
            newNode.next = head;
            head = newNode;
        }
        size = size + 1;
    
    }

    public int pop() {
        //Implement the pop() function
        if (head == null) {
            size = 0;
            return -1;
        } else {
            size = size - 1;
            int topEle = head.data;
            head = head.next;
            return topEle;
        }

    }

    public int top() {
        if (head == null) {
            return -1;
        } else {
            return head.data;
        }

    }
}
