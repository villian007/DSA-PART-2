import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
public class Solution {

/*	TreeNode structure 
 * 
 * class TreeNode<T> {
		T data;
		ArrayList<TreeNode<T>> children;

		TreeNode(T data){
			this.data = data;
			children = new ArrayList<TreeNode<T>>();
		}
	}*/
	
	
	
	public static void printLevelWise(TreeNode<Integer> root){
		if(root == null){
            return;
        }
         
        Queue<TreeNode<Integer>> q1 = new LinkedList<>();
        q1.add(root);
        
        while(!q1.isEmpty()){
            Queue<TreeNode<Integer>> q2=q1;
            ArrayList<TreeNode<Integer>> a1=new ArrayList<>();
            while(!q2.isEmpty()){
                TreeNode<Integer>temp=q2.poll();
                System.out.print(temp.data+" ");
                for(int i=0;i<temp.children.size();i++){
                    a1.add(temp.children.get(i));
                }
            }
            System.out.println();
            q1.clear();
            for(int i=0;i<a1.size();i++){
                q1.add(a1.get(i));
            }
        }

	}
		
}
